name: Docker

on:
  push:
    tags:
      - v*

jobs:
  # Push container image to GitHub Packages and Docker Hub.
  # See also https://docs.docker.com/docker-hub/builds/
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    strategy:
      matrix:
        images:
          - wildbook-ia
            # - wbia-base wbia-dependencies wbia-provision wbia

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.7

      # Build images
      - name: Build images
        run: |
          # Update Docker
          sudo apt-get remove docker docker-engine docker.io containerd runc
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo apt-key fingerprint 0EBFCD88
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          echo $'{\n    "experimental": "enabled"\n}' | tee $HOME/.docker/config.json
          sudo systemctl restart docker.service

          bash devops/build.sh ${{ matrix.images }}

      # Log into image registries
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: wildmebot
          password: ${{ secrets.WBIA_WILDMEBOT_DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push to Docker Hub
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') }}
        run: |
          VERSION=$(echo ${GITHUB_REF} | sed 's#.*/v##')
          bash devops/publish.sh -t ${VERSION} ${{ matrix.images }}
          bash devops/publish.sh -t latest ${{ matrix.images }}

      # Push containers out to container registries
      - name: Push to GitHub Packages
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') }}
        run: |
          VERSION=$(echo ${GITHUB_REF} | sed 's#.*/v##')
          bash devops/publish.sh -t ${VERSION} -r ghcr.io/wildmeorg ${{ matrix.images }}
          bash devops/publish.sh -t latest -r ghcr.io/wildmeorg ${{ matrix.images }}

      # Notify status in Slack
      - name: Slack Notification
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ia-development
          SLACK_COLOR: '#FF0000'
          SLACK_ICON: https://avatars.slack-edge.com/2020-03-02/965719891842_db87aa21ccb61076f236_44.png
          SLACK_MESSAGE: 'Latest (tagged) build failed :sob:'
          SLACK_USERNAME: "Latest"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
